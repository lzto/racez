This page shows the overview of Racez's architecture. Since our paper is still in review process, more detailed information will be added when the result is out.

= Introduction =
All data race detection tools require traces containing synchronization
operations and memory references. Traditional race detection
methods instrument both and apply race detection algorithms for
online or postmortem analysis. As illustrated in Figure 4b, traditional
methods instrument the lock and unlock operations, as well
as the two memory operations(read,write). RACEZ also instruments
the lock/unlock operations. However, it uses a different approach
to obtain the trace of memory addresses. Instead of instrumenting
each memory access, addresses are obtained from PMU samples.

= Examples =

A program with a Race
{{{
1 T1:
2 Lock(L)
3 ..........
4 Write X
5 ..........
6 Unlock(L)
7 .........
8 T2:
9 ..........
10 Read X
11 ........
}}}

Traditional method:
{{{
T1:
//Instrument lock operation
Lock(L)
..........
//Instrument Memory operation
Write X
..........
Unlock(L)
//Instrument unlock operation
T2:
..........
//Instrument Memory operation
Read X
.....
}}}